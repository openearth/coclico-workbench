[project]
name = "coclico-workbench"
version = "0.1.0"
description = "Building examples on how to handle coclico data"
readme = "README.md"
requires-python = ">=3.11.0, <3.12"
dependencies = [
    "cartopy>=0.24.1",
    "ipykernel>=6.29.5",
    "matplotlib>=3.10.0",
    "pip>=25.0.1",
    "pkg-resources",
    "pyam>=0.2.1a0",
    "pycollocation>=0.6.0a0",
    "pystac-client>=0.8.6",
    "rasterio>=1.4.3",
    "rioxarray>=0.18.2",
    "xarray>=2025.1.2",
    "zarr>=3.0.3",
]

[tool.black]
line-length = 88

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "TID251",      # flake8-tidy-imports.banned-api
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "E501",   # Line too long
  "PT004",  # Incorrect check, usefixtures is the correct way to do this
  "RUF012", # Would require a lot of ClassVar's
]
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
target-version = "py311"
flake8-unused-arguments.ignore-variadic-names = true

[tool.ruff.pydocstyle]
convention = "google"
